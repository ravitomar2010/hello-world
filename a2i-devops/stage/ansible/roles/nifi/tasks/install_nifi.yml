---
- name: Update apt repo
  apt:
     update_cache: yes
# #
# # - name: 'Install openjdk 8'
# #   apt:
# #     name: "{{ packages }}"
# #   vars:
# #     packages:
# #     - openjdk-8-jdk
# #
- name: Download nifi and nifi-toolkit packages
  get_url:
    url: "{{ nifi_download_url }}/{{ nifi_version }}/{{ item }}.tar.gz"
    dest: "/tmp/{{ item }}.tar.gz"
    mode: '0440'
    timeout: 7200
  retries: 3
  delay: 10
  loop:
    - "nifi-{{ nifi_version }}-bin"
    - "nifi-toolkit-{{ nifi_toolkit_version }}-bin"

- name: Extract nifi and nifi-toolkit packages to /usr/local/
  unarchive:
    src: "/tmp/{{ item }}"
    dest: /usr/local/
    remote_src: yes
  loop:
    - "nifi-{{ nifi_version }}-bin.tar.gz"
    - "nifi-toolkit-{{ nifi_toolkit_version }}-bin.tar.gz"

- name: rename nifi directories
  shell: "mv /usr/local/nifi-{{ nifi_version }}* /usr/local/nifi"

- name: rename nifi-toolkit directories
  shell: "mv /usr/local/nifi-toolkit-{{ nifi_toolkit_version }}* /usr/local/nifi-toolkit || :"

- name: Creates ssl directory
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "/usr/local/nifi/conf/ssl/{{ dns_name_of_server }}"

- name: Pull ldap bind password from SSM
  debug: msg="{{ lookup('aws_ssm', '{{ openldap_server_binduserpath_ssm }}' ) }}"
  register: manager_passwd
  delegate_to: localhost

# - name: template for login-identity-providers to ssl folder
#   template:
#     src: login-identity-providers.xml
#     dest: "/usr/local/nifi/conf/ssl/{{ dns_name_of_server }}/login-identity-providers.xml"

- name: template for login-identity-providers to conf folder
  template:
    src: login-identity-providers.xml
    dest: "/usr/local/nifi/conf/login-identity-providers.xml"

- name: Get value of env dns
  debug: msg="{{ nifi.hostname.split(".")[1:3] | join(".") }}"
  register: env_dns

- name: template for authorizers.xml
  template:
    src: authorizers.xml
    dest: /usr/local/nifi/conf/authorizers.xml
#
# - name: template for nifi.properties
#   template:
#     src: nifi.properties.ssl
#     dest: "/usr/local/nifi/conf/ssl/{{ dns_name_of_server }}/nifi.properties"

- name: Install nifi service
  command: /usr/local/nifi/bin/nifi.sh install

# - name: Start nifi service
#   command: /usr/local/nifi/bin/nifi.sh start

- name: Move nifi service file from bin to system directory and reload daemon
  shell: "{{ item }}"
  with_items:
    - "cp /usr/local/nifi/bin/nifi.sh /etc/systemd/system/"
    - "systemctl daemon-reload"
#
# - name: Enable nifi service
#   shell: systemctl enable nifi

# - name: start nifi service
#   systemd:
#    state: started
#    name: nifi
